name: Extract Jira IDs from commit

on:
  push:
    branches:
      - develop

jobs:
  extract-jira-ids:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Get latest release tag
      id: get_latest_tag
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data } = await github.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          console.log(data.tag_name);
          return data.tag_name;
    - name: Extract Jira IDs
      if: ${{ always() }}
      run: |
        set -e
        commit_msg=$(git log -1 --pretty=%B)
        jira_ids=$(echo "$commit_msg" | grep -Eo '[A-Z]{2,}-[0-9]+' | uniq | paste -sd ",")
        echo "::set-output name=jira_ids::$jira_ids"
    - name: Create Jira Release
      if: ${{ always() }}
      run: |
        set -e
        latest_tag=${{ steps.get_latest_tag.outputs.result }}
        release_date=$(date +'%Y-%m-%d')
        release_data="{\"name\": \"$latest_tag\", \"projectId\": 10000, \"description\": \"An Automated created release\", \"released\": false, \"releaseDate\": \"$release_date\", \"archived\": false }"
        curl --fail --request POST \
          --url 'https://devamparikh.atlassian.net/rest/api/3/version' \
          --user 'devamparikh15@gmail.com:${{ secrets.JIRA_TOKEN }}' \
          --header 'Accept: application/json' \
          --header 'Content-Type: application/json' \
          --data "$release_data"
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install requests module
      run: |
            python -m pip install --upgrade pip
            pip install requests
    - name: Update Jira Issues
      run: |
            set -e
            for id in $(echo "${{ needs.extract-jira-ids.outputs.jira_ids }}" | tr ',' '\n'); do
            url="https://devamparikh.atlassian.net/rest/api/3/issue/${id}"
            auth="devamparikh15@gmail.com:${{ secrets.JIRA_TOKEN }}"
            headers="Accept:application/json"
            payload="{\"fields\":{\"fixVersions\":[{\"name\":\"${{ steps.get_latest_tag.outputs.result }}\"}]}}"
            response=$(curl --fail --silent --show-error --location --request PUT "${url}" --user "${auth}" --header "${headers}" --data-raw "${payload}")
            echo "${response}"
            done
